import subprocess as sub

def hardware():
        sub.run("mkdir Hardware" , shell=True)
        sub.run("cd Hardware") 
        sub.run("wmic BIOS > BIOS.txt" , shell=True)
        sub.run("wmic BOOTCONFIG > BOOTCONFIG.txts" , shell=True)
        sub.run("wmic CDROM > CDROM.txt" , shell=True)
        sub.run("wmic COMPUTERSYSTEM > COMPUTERSYSTEM.txt" , shell=True)
        sub.run("wmic CSPRODUCT > CSPRODUCT.txt" , shell=True)
        sub.run("wmic DATAFILE > DATAFILE.txt" , shell=True)
        sub.run("wmic DCOMAPP > DCOMAPP.txt" , shell=True)
        sub.run("wmic DESKTOP > DESKTOP.txt" , shell=True)
        sub.run("wmic DESKTOPMONITOR > DESKTOPMONITOR.txt" , shell=True)
        sub.run("wmic DEVICEMEMORYADDRESS > DEVICEMEMORYADDRESS.txtt" , shell=True)
        sub.run("wmic DISKQUOTA > DISKQUOTA.txt" , shell=True)
        sub.run("wmic DMACHANNEL > DMACHANNEL.txt" , shell=True)
        sub.run("wmic ENVIRONMENT > ENVIRONMENT.txtt" , shell=True)    
        sub.run("wmic FSDIR > FSDIR.txt" , shell=True)
        sub.run("wmic GROUP > GROUP.txt" , shell=True)
        sub.run("wmic IDECONTROLLER > IDECONTROLLER.txt" , shell=True)
        sub.run("wmic  IRQ >  IRQ.txt" , shell=True)
        sub.run("wmic JOB > JOB.txt" , shell=True)
        sub.run("wmic LOADORDER > LOADORDER.txt" , shell=True)
        sub.run("wmic LOGICALDISK > LOGICALDISK.txt" , shell=True)
        sub.run("wmic MEMCACHE > MEMCACHE.txt" , shell=True)
        sub.run("wmic MEMORYCHIP > MEMORYCHIP.txt" , shell=True)
        sub.run("wmic MEMPHYSICAL > MEMPHYSICAL.txt" , shell=True)
        sub.run("wmic BASEBOARD > MOTHERBOARD.TXT" , shell=True)
        sub.run("wmic NETCLIENT > NETCLIENT.txt" , shell=True)
        sub.run("wmic NETLOGIN > NETLOGIN.txt" , shell=True)
        sub.run("wmic NETUSE > NETUSE.txt" , shell=True)
        sub.run("wmic NIC > NIC.txt" , shell=True)
        sub.run("wmic NICCONFIG > NICCONFIG.txt" , shell=True)
        sub.run("wmic NTDOMAIN >  NTDOMAIN.txt" , shell=True)
        sub.run("wmic NTEVENT > NTEVENT.txt" , shell=True)
        sub.run("wmic NTEVENTLOG > NTEVENTLOG.txt" , shell=True)
        sub.run("wmic ONBOARDDEVICE > ONBOARDDEVICE.txt" , shell=True)
        sub.run("wmic OS > OS.txt" , shell=True)
        sub.run("wmic PAGEFILE > PAGEFILE.txt" , shell=True)
        sub.run("wmic PAGEFILESET > PAGEFILESET.txt" , shell=True)
        sub.run("wmic PARTITION > PARTITION.txt" , shell=True)
        sub.run("wmic PORT > PORT.txt" , shell=True)
        sub.run("wmic PORTCONNECTOR > PORTCONNECTOR.txtt" , shell=True)
        sub.run("wmic  PRINTER > PRINTER.txt" , shell=True)
        sub.run("wmic PROCESS > PROCESS.txt" , shell=True)
        sub.run("wmic PRODUCT > PRODUCT.txt" , shell=True)
        sub.run("wmic QFE > QFE.txt" , shell=True)
        sub.run("wmic QUOTASETTING > QUOTASETTING.txt" , shell=True)
        sub.run("wmic RDACCOUNT > RDACCOUNT.txt" , shell=True)
        sub.run("wmic RDNIC > RDNIC.txt" , shell=True)
        sub.run("wmic RDPERMISSIONS > RDPERMISSIONS.txt" , shell=True)
        sub.run("wmic RDTOGGLE > RDTOGGLE.txt" , shell=True)
        sub.run("wmic RECOVEROS > RECOVEROS.txt" , shell=True)
        sub.run("wmic REGISTRY > REGISTRY.txt" , shell=True)
        sub.run("wmic SCSICONTROLLER > SCSICONTROLLER.txt" , shell=True)
        sub.run("wmic  SERVER > SERVER.txt" , shell=True)
        sub.run("wmic SERVICE > SERVICE.txt" , shell=True)
        sub.run("wmic SHADOWCOPY > SHADOWCOPY.txt" , shell=True)
        sub.run("wmic SHADOWSTORAGE. > SHADOWSTORAGE.txt" , shell=True)
        sub.run("wmic SHARE > SHARE.txtt" , shell=True)
        sub.run("wmic SOFTWAREELEMENT > SOFTWAREELEMENT.txt" , shell=True)
        sub.run("wmic SOUNDDEV > SOUNDDEV.txt" , shell=True)
        sub.run("wmic STARTUP > STARTUP" , shell=True)       
        sub.run("wmic SYSACCOUNT > SYSACCOUNT.txt" , shell=True)       
        sub.run("wmic SYSDRIVER > SYSDRIVER.txt" , shell=True)       
        sub.run("wmic SYSTEMENCLOSURE > SYSTEMENCLOSURE.txt" , shell=True)
        sub.run("wmic SYSTEMSLOT > SYSTEMSLOT.txt" , shell=True)       
        sub.run("wmic TAPEDRIVE > TAPEDRIVE.txt" , shell=True)
        sub.run("wmic TEMPERATURE > TEMPERATURE.txt" , shell=True)       
        sub.run("wmic TIMEZONE > TIMEZONE.txt" , shell=True)
        sub.run("wmic UPS > UPS.txt" , shell=True)       
        sub.run("wmic USERACCOUNT > USERACCOUNT.txt" , shell=True)
        sub.run("wmic VOLTAGE > VOLTAGE.txt" , shell=True)       
        sub.run("wmic VOLUME > VOLUME.txt" , shell=True)
        sub.run("wmic VOLUMEQUOTASETTING > VOLUMEQUOTASETTING.txt" , shell=True)       
        sub.run("wmic VOLUMEUSERQUOTA > VOLUMEUSERQUOTA.txt" , shell=True)
        sub.run("wmic WMISET > WMISET.txt" , shell=True)       
                                    
def Tcp():
        sub.run("mkdir TCP" , shell=True)
        sub.run("cd TCP" , shell=True)
        sub.run("netsh interface tcp show security > TCP_Security.txt" , shell=True)
        sub.run("netsh interface tcp show heuristics" , shell=True)
        sub.run("netsh interface tcp show supplemental " , shell=True)
        sub.run("netsh int tcp show supplementalports" , shell=True)
        sub.run("netsh int tcp show supplementalsubnets" , shell=True)

def Network_ping():
    sub.run("mdir Network_ping" , shell=True)
    sub.run("cd Network_ping" , shell=True)
    sub.run("ping 192.168.43.1  > IP_ping.txt" , shell=True)
    sub.run("ping 127.0.0.0 > Loopback_Pseudo-Interface1_8_ping.txt" , shell=True)
    sub.run("ping 127.0.0.1 >  Loopback_Pseudo-Interface1_32_ping.txt " , shell=True)
    sub.run("ping  27.255.255.255  >  Loopback_Pseudo-Interface1_32/255_ping.txt   " , shell=True)
    sub.run("ping 169.254.49.97 >  Npca_Loopback_Adapter_ping_16.txt  " , shell=True)
    sub.run("ping 169.254.49.97 >  Npca_Loopback_Adapter_32_ping.txt  " , shell=True)
    sub.run("ping 169.254.255.255 >  Npca_Loopback_Adapter_32/255_ping.txt" , shell=True)
    sub.run("ping 192.168.43.0 >  WIFI_24.txt   " , shell=True)
    sub.run("ping 192.168.43.32  >  WIFI_32_ping.txt" , shell=True)
    sub.run("ping 192.168.43.255  > WIFI_32/255_ping.txt" , shell=True)
    sub.run("ping 192.168.137.0 > Local_Area_Connection_12_24.txt" , shell=True)
    sub.run("ping 192.168.137.0 > Local_Area_Connection_12_32.txt" , shell=True)
    sub.run("ping 192.168.137.255 > Local_Area_Connection_12_225/32.txt" , shell=True)
    sub.run("ping 224.0.0.0 >  Loopback_Pseudo-Interface1_8_ping.txt" , shell=True)
    sub.run("ping 224.0.0.0 > Npca_Loopback_Adapter_ping/4.txt " , shell=True)
    sub.run("ping 224.0.0.0 > Ethernet/4.txt" , shell=True)
    sub.run("ping 224.0.0.0  WiFi/4.txt" , shell=True)
    sub.run("ping 224.0.0.0 Local_Area_Connection_9/4.txt" , shell=True)
    sub.run("ping 224.0.0.0  Local_Area_Connection_12/4.txt" , shell=True)
    sub.run("ping 256  255.255.255.255 > Npca_Loopback_Adapter_ping/255-32.txt " , shell=True)
    sub.run("ping 256  255.255.255.255 > Ethernet/255-32.txt" , shell=True)
    sub.run("ping 256  255.255.255.255  WiFi/255-32.txt" , shell=True)
    sub.run("ping 256  255.255.255.255 Local_Area_Connection_9/255-32.tx" , shell=True)
    sub.run("ping 256  255.255.255.255  Local_Area_Connection_12/255-32.txt" , shell=True)


def IPV4():
    sub.run("mdir IPV4" , shell=True)
    sub.run("cd IPV4" , shell=True)
    sub.run("netsh interface ipv4 show address > IPV4_address.txt" , shell=True)
    sub.run("netsh interface ipv4 show offload > IPV4_offload.txt" , shell=True)
    sub.run("netsh interface ipv4 show dynamicportrange > IPV4_dynamicportrange.txt" , shell=True)
    sub.run("netsh interface ipv4 show compartments " , shell=True)
    sub.run("netsh interface ipv4 show config" , shell=True)
    sub.run("netsh interface ipv4 show destinationcache " , shell=True)
    sub.run("netsh interface ipv4 show destinationcache " , shell=True)
    sub.run("netsh interface ipv4 show excludedportrange " , shell=True)
    sub.run("netsh interface ipv4 show global " , shell=True)
    sub.run("netsh interface ipv4 show icmpstats" , shell=True)
    sub.run("netsh interface ipv4 show interfaces " , shell=True)
    sub.run("netsh interface ipv4 show ipaddresses" , shell=True)
    sub.run("netsh interface ipv4 show ipnettomedia " , shell=True)
    sub.run("netsh interface ipv4 show ipstats " , shell=True)
    sub.run("netsh interface ipv4 show route " , shell=True)
    sub.run("netsh interface ipv4 show subinterfaces  " , shell=True)
    sub.run("netsh interface ipv4 show tcpconnections " , shell=True)
    sub.run("netsh interface ipv4 show udpconnections " , shell=True)
    sub.run("netsh interface ipv4 show udpstats" , shell=True)
    sub.run("netsh interface ipv4 show winsservers t" , shell=True)
    sub.run("netsh interface ipv4 show excludedportrange protocol=tcp" , shell=True)
    sub.run("netsh interface ipv4 show excludedportrange protocol=udp" , shell=True)

def Target_Info():
    sub.run("mdir Target_Info" , shell=True)
    sub.run("cd Target_Info" , shell=True)
    sub.run("tasklist > tsk.txt" , shell=True)
    sub.run("systeminfo > systeminfo.txt" , shell=True)
    sub.run("wmic product get name  > app.txt" , shell=True)
    sub.run("wmic product get name  > app.txt" , shell=True)
    sub.run("netsh wlan show pro > Lan_Networks.txt" , shell=True)
    sub.run("ipconfig /all > Machine_Network.txt" , shell=True)
    
def HTTP():
    sub.run("mdir HTTP" , shell=True)
    sub.run("cd HTTP" , shell=True)
    sub.run("netsh http show cacheparam > http_cacheparam.txt" , shell=True)
    sub.run("netsh http show cachestate > http_cachestate.txt" , shell=True)
    sub.run("netsh http show iplisten > http_iplisten.txt" , shell=True)
    sub.run("netsh http show servicestate > http_servicestate.txt" , shell=True)
    sub.run("netsh http show setting > http_setting.txt" , shell=True)
    sub.run("netsh http show sslcert > http_sslcert.txt" , shell=True)
    sub.run("netsh http show timeout > http_timeout.txt" , shell=True)
    sub.run("netsh http show urlacl  >  http_urlacl.txt" , shell=True)


def Website_trace():
    sub.run("mdir Website_trace" , shell=True)
    sub.run("cd Website_trace" , shell=True)
    sub.run("set /p trace=website :" , shell=True)
    sub.run("nslookup > lookup_%trace%.txt" , shell=True)
    sub.run("tracert %trace% > %trace%.txt" , shell=True)
    

def Network_status():
    sub.run("mdir Network_status" , shell=True)
    sub.run("cd Network_status" , shell=True)
    print("Generating Network status")
    sub.run("Nbtstat -c > cache.txt" , shell=True)
    sub.run("Nbtstat -n > local_NetBIOS_names.txt" , shell=True)
    sub.run("Nbtstat -r > Lists_names_resolved.txt" , shell=True)
    sub.run("Nbtstat -R > Purges_and_reloads.txt" , shell=True)
    sub.run("Nbtstat -S > Lists_sessions_table.txt" , shell=True)
    sub.run("Nbtstat -s > Lists_sessions_table(NETBIOS_NAMES).txt" , shell=True)
    print("Network status Generated")

def enegry_reports():
    sub.run("mdir enegry_reports" , shell=True)
    sub.run("cd enegry_reports" , shell=True)
    print("Generating Enegry Reports ")
    sub.run("powercfg /ENERGY" , shell=True)
    sub.run("powercfg /BATTERYREPORT" , shell=True)
    sub.run("powercfg /SYSTEMSLEEPDIAGNOSTICS" , shell=True)
    sub.run("powercfg /SLEEPSTUDY" , shell=True)
    print("Enegry Reports Generated ")


def Firewall():
    sub.run("mdir Firewall" , shell=True)
    sub.run("cd Firewall" , shell=True)
    print("Scanning the Firewall")
    sub.run("netsh advfirewall monitor  show firewall > Firewall.txt" , shell=True)
    sub.run("netsh advfirewall monitor show currentprofile > currentprofile.txt " , shell=True)
    print("Scanning the Firewall complete")

def Security(): 
    sub.run("mdir Security" , shell=True)
    sub.run("cd Security" , shell=True)
    print("Gathering NTFS scan and Disk scan")
    sub.run("chkntfs > chkntfs_scan.txt" , shell=True)
    sub.run("chkdsk c > disk_scan.txt" , shell=True)
    print("NTFS scan and Disk scan complete")
